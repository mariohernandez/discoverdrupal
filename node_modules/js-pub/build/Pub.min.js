!function(f){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=f();else if("function"==typeof define&&define.amd)define([],f);else{var g;g="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,g.Pub=f()}}(function(){return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){"use strict";var hasOwn=Object.prototype.hasOwnProperty,toStr=Object.prototype.toString,isArray=function(arr){return"function"==typeof Array.isArray?Array.isArray(arr):"[object Array]"===toStr.call(arr)},isPlainObject=function(obj){if(!obj||"[object Object]"!==toStr.call(obj))return!1;var hasOwnConstructor=hasOwn.call(obj,"constructor"),hasIsPrototypeOf=obj.constructor&&obj.constructor.prototype&&hasOwn.call(obj.constructor.prototype,"isPrototypeOf");if(obj.constructor&&!hasOwnConstructor&&!hasIsPrototypeOf)return!1;var key;for(key in obj);return"undefined"==typeof key||hasOwn.call(obj,key)};module.exports=function extend(){var options,name,src,copy,copyIsArray,clone,target=arguments[0],i=1,length=arguments.length,deep=!1;for("boolean"==typeof target?(deep=target,target=arguments[1]||{},i=2):("object"!=typeof target&&"function"!=typeof target||null==target)&&(target={});length>i;++i)if(options=arguments[i],null!=options)for(name in options)src=target[name],copy=options[name],target!==copy&&(deep&&copy&&(isPlainObject(copy)||(copyIsArray=isArray(copy)))?(copyIsArray?(copyIsArray=!1,clone=src&&isArray(src)?src:[]):clone=src&&isPlainObject(src)?src:{},target[name]=extend(deep,clone,copy)):"undefined"!=typeof copy&&(target[name]=copy));return target}},{}],2:[function(require,module,exports){var pather=require("./helpers/pather.js"),globaler=require("./helpers/globaler.js"),extend=require("extend"),Pub=function(paths,base,variables){function path(p){return p=p||"",0===p.indexOf("/@")?p.replace(/(\/@)?/,""):pather.finalize(props.base+pather.normalize(p))}function addPath(key,value){if(value=value||"","object"!=typeof key){var methodName=pather.camelCase(key),basePath=pather.normalize(value),newPath={};return newPath[methodName]=basePath,props.paths=extend({},props.paths,newPath),void addToApi(methodName,basePath)}for(var index in key)addPath(index,key[index])}function addVariable(key,value){if(value=value||"","object"!=typeof key){if(key=key.toLowerCase(),"undefined"!=typeof props.reservedVariables[key])throw new Error(key+" is a reserved variable");var variable={};return variable[key]=value,void(props.variables=extend({},props.variables,variable))}for(var index in key)addVariable(index,key[index])}function addToApi(methodName,basePath){api[methodName]=function(path){return build(basePath,path||"")}}function build(base,newPath){return path(concatWithVariables(base,newPath))}function concatWithVariables(base,newPath){base=parseVariables(base);var baseWithPath=parsePathVariable(base,newPath);return base===baseWithPath?base+pather.normalize(newPath):baseWithPath}function parseVariables(string){for(var key in props.reservedVariables)"path"!==key&&(string=string.replace(new RegExp("({{s*"+key+"s*}})","ig"),props.reservedVariables[key]));for(var key in props.variables)"path"!==key&&(string=string.replace(new RegExp("({{s*"+key+"s*}})","ig"),props.variables[key]));return string}function parsePathVariable(base,newPath){return base.replace(new RegExp("({{s*paths*}})","ig"),newPath)}var props={paths:{},base:pather.finalize(base||""),variables:{},reservedVariables:{path:null,timestamp:Date.now()}},api={path:path,addPath:addPath,addVariable:addVariable,getTimestamp:function(){return props.reservedVariables.timestamp}};return addPath(paths||{}),addVariable(variables||{}),api};Pub.globalize=function(functionPaths,base){functionPaths=functionPaths||{};var pub=globaler.capture("Pub",new Pub(functionPaths,base),"path");for(var functionName in functionPaths)globaler.addFunction(functionName,"Pub",functionName);return pub},module.exports=Pub},{"./helpers/globaler.js":3,"./helpers/pather.js":4,extend:1}],3:[function(require,module,exports){(function(global){var extend=require("extend"),pather=require("./pather.js"),instances={};exports.addFunction=function(functionName,className,methodName,override){if(functionName=functionName||null,override=override||!1,"undefined"==typeof instances[className])throw"Globaler does not have an instance of "+className;null===functionName&&(functionName=pather.camelCase(pather.base(className))),("function"!=typeof functionName||override)&&(global[functionName]=function(){return instances[className][methodName].apply(global,arguments)})},exports.capture=function(className,instance,defaultMethodName){defaultMethodName=defaultMethodName||null;var _instance={};return _instance[className]=instance,instances=extend({},instances,_instance),null!==typeof defaultMethodName&&exports.addFunction(null,className,defaultMethodName),instances[className]}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./pather.js":4,extend:1}],4:[function(require,module,exports){function trimSlash(string){return string.replace(/^\/+|\/+$/g,"")}function rTrimSlash(string){return string.replace(/\/+$/,"")}function ucfirst(string){var f=string.charAt(0).toUpperCase();return f+string.substr(1)}function lcfirst(string){var f=string.charAt(0).toLowerCase();return f+string.substr(1)}function end(array){return array[array.length-1]}exports.normalize=function(path){return"/"+trimSlash(path)},exports.finalize=function(path){return rTrimSlash(path)},exports.camelCase=function(string){var matches=string.match(/[A-Za-z0-9]+/g);if(null===matches)return"";for(var output="",i=0,len=matches.length;len>i;i++)output+=ucfirst(matches[i].toLowerCase());return lcfirst(output)},exports.base=function(string){var matches=string.match(/[A-Za-z0-9]+/g);return null===matches?"":end(matches)}},{}]},{},[2])(2)});